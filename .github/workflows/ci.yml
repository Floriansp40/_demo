name: Intregation

on:
    push:
        branches: 
          - main

jobs:
    backend:
        if: ${{ contains(github.event.head_commit.message, '#all') }}
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend

        services:
            mariadb:
                image: mariadb:latest
                env:
                    MARIADB_ROOT_PASSWORD: toor
                    MARIADB_DATABASE: test
                    MARIADB_USER: test
                    MARIADB_PASSWORD: test
                ports:
                    - 3306:3306
                options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
  
        env:
            BDD_HOST: 127.0.0.1
            BDD_NAME: test
            BDD_USER: test
            BDD_PASS: test

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
            
            - name: Check Database Connection
              run: |
                sudo apt-get install -y mysql-client
                mysql --host 127.0.0.1 --port 3306 -u root -ptoor -e "SHOW DATABASES"   
            
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                node-version: 20.x
            - name: Install Dependencies
              run: npm i

            - name: Init Database
              run: npm run initbdd
            - name: Add Admin Test User
              run: |
                mysql -u root -ptoor --host 127.0.0.1 --port 3306 --database test < ./test/insert_test_user.sql

            # - name: Run Main Router Test
            #   run: npm run test:file main_route

            - name: Run all test and coverage
              run: npm run test:cov

            - name: Check fil and folder
              run: |
                ls -al
                ls -al coverage
              
            - name: Upload Coverage Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: coverage-repport
                path: backend/coverage
                retention-days: 3
            - name: JUST TO SEE
              run: pwd

            - name: SonarQube Quality
              uses: SonarSource/sonarcloud-github-action@v3.1.0
              with:
                projectBaseDir: ./backend
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    Integration:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: frontend

      

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Check fil and folder
          run: |
            ls -al

        - name: Start Builded Backend Docker
          working-directory: backend
          run: |
            docker compose -f docker-compose-build.yml up -d
            docker ps -a

        - name: Cypress E2E Run
          uses: cypress-io/github-action@v5
          

        - uses: actions/upload-artifact@v4
          with:
            name: cypress-screenshots
            path: cypress/screenshots

        - uses: actions/upload-artifact@v4
          with:
            name: cypress-videos
            path: cypress/videos

        - name: Clean Builded Backend Docker
          run: docker compose -f docker-compose-build.yml down

